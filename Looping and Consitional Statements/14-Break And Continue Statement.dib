#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# Break And Continue Statements

The break statement is used to exit a loop. The continue statement is used to skip the current iteration of a loop.

#!markdown

## Break Statement

The break statement is used to exit a loop. The break statement can be used in both while and for loops.

#!csharp

for(int i = 0; i < 10; i++) {
    if(i == 2)
    {
        break;
    }
    Console.WriteLine(i);
}

#!markdown

## Continue Statement

The continue statement is used to skip the current iteration of a loop. The continue statement can be used in both while and for loops.

#!csharp

// Displaying even numbers.
for(int i = 0; i<= 10; i++){
    if(i % 2 != 0){
        continue;
    }
    Console.WriteLine(i);
}
